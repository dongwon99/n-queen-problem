import java.util.Scanner;


import java.io.*;

class Coordinate 
{
	public int x,y;
	Coordinate(int x, int y)
	{
		this.x=x; this.y=y;
	}
	public boolean equals(Coordinate n)
	{
		if (x == n.x && y == n.y)
			return true;
		return false;
	}
}

class Stack 
{
	private int top = -1;
	private Coordinate stack[];
	int length;
	
	public Stack(int length)
	{
		this.length = length;
		stack = new Coordinate[length];
	}	
	public Coordinate push(Coordinate data)
	{
		if(top == length-1)
		{
			return new Coordinate(-1,-1);
		}
		stack[++top] = data;
		return data;
	}
	public Coordinate pop()
	{
		if(top == -1)
		{
			return new Coordinate(-1,-1);
		}
		return stack[top--];
	}
	public boolean comparison(Coordinate data)
	{
		for(int i = 0; i <= top; i++)
		{
			if(data.x == stack[i].x || data.y == stack[i].y)
			{
				return true;
			}
			else if(data.x + data.y == stack[i].x + stack[i].y)
			{
				return true;
			}
			else if(data.x - data.y == stack[i].x - stack[i].y)
			{
				return true;
			}
		}
		return false;
	}
	public Coordinate find(int x, int y)
	{
		for (; x <= length; x++)
		{
			Coordinate temp = new Coordinate(x,y);
			if(!comparison(temp))
			{
				return temp;
			}
		}
		return null;
	}
	public Coordinate seek(int index)
	{
		return stack[index];
	}
	public void saveResult(FileWriter fout) throws IOException
	{
		for (int i = 0; i < length; i++)
		{
			String result = "(" + Integer.toString(stack[i].y) + ", " + Integer.toString(stack[i].x) + ") ";
			fout.write(result);
		}
		fout.write("\n");
	}
}


public class ETC
{
	public static void main(String[] args) throws IOException
	{
		int n = 4;
		long beforeTime;
		long afterTime;
		long secDiffTime;

		beforeTime = System.currentTimeMillis(); //코드 실행 전에 시간 받아오기    
		//FileWriter fout = new FileWriter("Result.txt");
		Stack stack = new Stack(n);
	
		int x = 1, y = 1;
		int result = 0;
		while(true)
		{
			for(; y <= n; y++)
			{
				Coordinate temp = stack.find(x, y);
				if(temp == null)
				{
					x = stack.pop().x+1;
					y -= 2;
					if(y < 0)
						break;
				}
				else
				{
					stack.push(temp);
					x = 1;
				}
			}
			Coordinate lastIndex = stack.pop();
			y = lastIndex.y; x = lastIndex.x+1;
			
			
			if(y == n)
			{			
				result++;
				//stack.saveResult(fout);
			}
			else if (y == -1)
			{
				break;
			}
		}
		System.out.println(result);
		//fout.close();
	
		afterTime = System.currentTimeMillis(); // 코드 실행 후에 시간 받아오기
		secDiffTime = (afterTime - beforeTime); //두 시간에 차 계산
		System.out.println("시간차이(m) : "+secDiffTime);
	}
}
